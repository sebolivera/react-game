{"version":3,"sources":["Game.js","App.js","index.js"],"names":["Game","props","width","height","canvas","useRef","tilewidth","state","gravity","ball","x","y","velocityX","velocityY","deltaX","deltaY","radius","towards","move","event","keyCode","update","step","Math","abs","updateBallVelocity","useEffect","document","addEventListener","context","current","getContext","setInterval","fillStyle","fillRect","lineWidth","i","moveTo","lineTo","stroke","draw","ref","App","className","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5d1520d0.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\n\r\nfunction Game(props)\r\n{\r\n    const width = 1800;\r\n    const height = 650;\r\n    const canvas = useRef();\r\n    const tilewidth = 50;\r\n    const stepspeed = 5;\r\n    const state = {\r\n        gravity: 0.8,\r\n        ball: {\r\n            x : 500,\r\n            y: 300,\r\n            velocityX : 0,\r\n            velocityY : 0,\r\n            deltaX : 0,\r\n            deltaY : 0,\r\n            radius:20,\r\n            towards : {\r\n                x : 500,\r\n                y : 300,\r\n            }\r\n        }\r\n    }\r\n\r\n    const draw = (context) => {\r\n        context.fillStyle= \"white\";\r\n        context.fillRect(0, 0, width, height);\r\n        context.lineWidth = 2;\r\n\r\n        for (let i = 0; i<=height; i+=tilewidth)\r\n        {\r\n            context.moveTo(0, i);\r\n            context.lineTo(width, i)\r\n        }\r\n        context.stroke();\r\n\r\n        for (let i = 0; i<=width; i+=tilewidth)\r\n        {\r\n            context.moveTo(i, 0);\r\n            context.lineTo(i, height)\r\n        }\r\n        context.stroke();\r\n        \r\n        context.fillStyle= \"red\";\r\n        context.fillRect(state.ball.x-tilewidth, state.ball.y-tilewidth, tilewidth, tilewidth);\r\n    }\r\n\r\n\r\n    const move = (event) =>\r\n    {\r\n        if (state.ball.x === state.ball.towards.x && state.ball.y === state.ball.towards.y)\r\n        {\r\n            switch (event.keyCode)\r\n            {\r\n                case 40://up\r\n                    if (state.ball.towards.y < height-tilewidth)\r\n                        state.ball.towards.y += tilewidth;\r\n                        state.ball.velocityY = tilewidth/2;\r\n                    break;\r\n                case 38://down\r\n                    if (state.ball.towards.y > tilewidth)\r\n                        state.ball.towards.y -= tilewidth;\r\n                        state.ball.velocityY = tilewidth/2;\r\n                    break;\r\n                case 39://left\r\n                    if (state.ball.towards.x < width-tilewidth)\r\n                        state.ball.towards.x += tilewidth;\r\n                        state.ball.velocityX = tilewidth/2;\r\n                    break;\r\n                case 37://right\r\n                    if (state.ball.towards.x > tilewidth)\r\n                        state.ball.towards.x -= tilewidth;\r\n                        state.ball.velocityX = tilewidth/2;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateBallVelocity = (step=1) => \r\n    {\r\n        if (Math.abs(state.ball.x  - state.ball.towards.x) < tilewidth/2)\r\n        {\r\n            state.ball.velocityX = 0;\r\n        }\r\n        if (state.ball.velocityX > state.ball.deltaX++)\r\n        {\r\n            state.ball.deltaX += step;\r\n        }\r\n        else\r\n        {\r\n            state.ball.deltaX -= step;\r\n            if (state.ball.deltaX < 0)\r\n                state.ball.deltaX = 0;\r\n        }\r\n\r\n        if (state.ball.x < state.ball.towards.x)\r\n        {\r\n            if (state.ball.x + state.ball.deltaX < state.ball.towards.x && state.ball.deltaX > 0)\r\n            {\r\n                state.ball.x += state.ball.deltaX;\r\n            }\r\n            else\r\n            {\r\n                state.ball.x = state.ball.towards.x;\r\n            }\r\n        }\r\n        else if (state.ball.x > state.ball.towards.x)\r\n        {\r\n            \r\n            if (state.ball.x - state.ball.deltaX >= state.ball.towards.x && state.ball.deltaX > 0)\r\n            {\r\n                state.ball.x -= state.ball.deltaX;\r\n            }\r\n            else\r\n            {\r\n                state.ball.x = state.ball.towards.x;\r\n            }\r\n        }\r\n        \r\n        if (state.ball.x === state.ball.towards.x)\r\n        {\r\n            state.ball.velocityX = 0;\r\n            state.ball.deltaX = 0;\r\n        }\r\n\r\n        \r\n        if (Math.abs(state.ball.y  - state.ball.towards.y) < tilewidth/2)\r\n        {\r\n            state.ball.velocityY = 0;\r\n        }\r\n        if (state.ball.velocityY > state.ball.deltaY++)\r\n        {\r\n            state.ball.deltaY += step;\r\n        }\r\n        else\r\n        {\r\n            state.ball.deltaY -= step;\r\n            if (state.ball.deltaY < 0)\r\n                state.ball.deltaY = 0;\r\n        }\r\n\r\n        if (state.ball.y < state.ball.towards.y)\r\n        {\r\n            if (state.ball.y + state.ball.deltaY < state.ball.towards.y && state.ball.deltaY > 0)\r\n            {\r\n                state.ball.y += state.ball.deltaY;\r\n            }\r\n            else\r\n            {\r\n                state.ball.y = state.ball.towards.y;\r\n            }\r\n        }\r\n        else if (state.ball.y > state.ball.towards.y)\r\n        {\r\n            if (state.ball.y - state.ball.deltaY > state.ball.towards.y && state.ball.deltaY > 0)\r\n            {\r\n                state.ball.y -= state.ball.deltaY;\r\n            }\r\n            else\r\n            {\r\n                state.ball.y = state.ball.towards.y;\r\n            }\r\n        }\r\n        \r\n        if (state.ball.y === state.ball.towards.y)\r\n        {\r\n            state.ball.velocityY = 0;\r\n            state.ball.deltaY = 0;\r\n        }\r\n        \r\n    }\r\n\r\n    const update = () => \r\n    {\r\n        updateBallVelocity(stepspeed);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        document.addEventListener(\"keydown\", move, true);\r\n        const context = canvas.current.getContext(\"2d\");\r\n        setInterval(() => {\r\n            update();\r\n            draw(context);\r\n        }, 1000/60);\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <canvas ref={canvas} width={width} height={height}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import './App.css';\nimport React, { Component } from 'react';\nimport Game from './Game';\n\n\nclass App extends Component{\n\n  render()\n  {\n    return(\n        <div className=\"App\">\n          <Game/>\n        </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}